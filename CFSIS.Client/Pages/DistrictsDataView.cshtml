@using CFSIS.Shared
@using CFSIS.Shared.Models
@page "/Districts"
@using Microsoft.AspNetCore.Blazor.Browser.Interop

@using System.Collections.Generic
@using Microsoft.AspNetCore.Blazor

@inject HttpClient Http

@if (Messages != "")
{
    <div id="outPopUp" style="position: absolute;  width: 312px;  height: 252px;  z-index: 15;  top: 50%;  left: 50%;  margin: -100px 0 0 -150px;  background: #f6cd2f;">
        <div id="outPopUp" style="position: absolute;  width: 300px;  height: 248px;    background: #360849;">
            <img src="Images/C2.png" onclick="@closeMessage" />
            <span style="color:#ECF3F4;font-size:xx-large;display: inline-block;    margin: 10px 10px 0 0;   padding: 5px 10px ">
                @Messages
            </span>
        </div>

    </div>
}


<img src="~/Images/blank.gif" alt="" width="1" height="10" />
<table width="99%" style=" border-bottom:3px solid #3273d5;">
    <tr>
        <td class="style1" align="center">
            <h3>Shanu ASP.NET Core Blazor Master/Detail  CRUD using WEB API & EF :)</h3>
            <h3>Master/Detail HTML Grid with Filter, Sorting and Detail Grid Grand Total Row</h3>
        </td>

    </tr>
</table>
<img src="~/Images/blank.gif" alt="" width="1" height="2" />

<table width="100%" style="background:#05163D;color:honeydew">
    <tr>
        <td width="20">&nbsp;</td>
        <td>
            <h2> Add New Districts Information</h2>
        </td>
        <td>&nbsp;</td>
        <td align="right">
            <button class="btn btn-info" onclick="@AddNewDistricts">Add New Order</button>
        </td>
        <td width="10">&nbsp;</td>
    </tr>
    <tr>
        <td colspan="2"></td>
    </tr>
</table>

@if (showAddMaster == true)
{
    <table style=" background-color:#FFFFFF; border: dashed 3px #6D7B8D; padding: 5px;width: 99%;table-layout:fixed;" cellpadding="2" cellspacing="2">
        <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;border: solid 1px #659EC7;">
            <td>
                <h3> Add/Edit Districts</h3>
            </td>

        </tr>
        <tr>
            <td>
                <table class="form-group">
                    <tr>
                        <td>
                            <label for="Name" class="control-label">Order No</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@dstM.DistrictId" readonly />
                        </td>
                        <td width="20">&nbsp;</td>
                        <td>
                            <label for="Name" class="control-label">Table Name</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@dstM.DistrictName" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="State" class="control-label">StateId</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@dstM.StateId" />
                        </td>
                        <td width="20">&nbsp;</td>
                        <td></td>
                        <td>
                            <button type="submit" class="btn btn-success" onclick="@(async () => await SaveDistricts())" style="width:220px;">Save</button>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}

@if (showAddDetail == true)
{
    <table style=" background-color:#FFFFFF; border: dashed 3px #6D7B8D; padding: 5px;width: 99%;table-layout:fixed;" cellpadding="2" cellspacing="2">
        <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;border: solid 1px #659EC7;">
            <td>
                <h3> Add/Edit Sub Districts</h3>
            </td>

        </tr>
        <tr>
            <td>
                <table class="form-group">
                    <tr>
                        <td>
                            <label for="Name" class="control-label">SubDistricts No</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@subdstD.SubDistrictsId" readonly />
                        </td>
                        <td width="20">&nbsp;</td>
                        <td>
                            <label for="Name" class="control-label">District</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@subdstD.DistrictId" readonly />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="Email" class="control-label">Item Name</label>
                        </td>
                        <td>
                            <input type="text" class="form-control" bind="@subdstD.SubDistrictsName" />
                        </td>
                        <td width="20">&nbsp;</td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td colspan="4" align="center">
                            <button type="submit" class="btn btn-success" onclick="@(async () => await SaveSubDistricts())" style="width:220px;">Save</button>
                        </td>
                        <td colspan="2"></td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
}

<img src="~/Images/blank.gif" alt="" width="1" height="2" />
<hr />
@if (districts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table style=" background-color:#FFFFFF; border: solid 2px #6D7B8D; padding: 5px;width: 99%;table-layout:fixed;" cellpadding="2" cellspacing="2">

        <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;border: solid 1px #659EC7;">
            <td width="120"></td>
            <td width="40" align="center"><b>Edit</b></td>
            <td width="40" align="center"><b>Delete</b></td>
            <td width="120" align="center" style="cursor: pointer;">
                <b>District Id</b> &nbsp;
                <img src="@ImageSortname" onclick="@(async () => await StudentSorting("DistrictId"))" height="24" width="24" />

            </td>
            <td width="240" align="center" style="cursor: pointer;">
                <b>District Name</b> &nbsp;
                <img src="@ImageSortname" onclick="@(async () => await StudentSorting("DistrictName"))" height="24" width="24" />

            </td>
            <td width="240" align="center" style="cursor: pointer;">
                <b>SubDistrictsId</b> &nbsp;
                <img src="@ImageSortname" onclick="@(async () => await StudentSorting("SubDistrictsId"))" height="24" width="24" />

            </td>
            <td width="340" align="center" style="cursor: pointer;">
                <b> Sub Districts Name</b> &nbsp;
                <img src="@ImageSortname" onclick="@(async () => await StudentSorting("SubDistrictsName"))" height="24" width="24" />

            </td>
        </tr>
        <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;">
            <td width="140" align="center" colspan="4">
                <img src="Images/filter.png" width="24" height="24" /> Filter By
            </td>
            <td width="180" align="center" style="border: solid 1px #FFFFFF; padding: 5px;table-layout:fixed;">
                <input width="70" onchange=@OnDistrictNameChanged oninput="(this.dispatchEvent(new CustomEvent('change', {bubbles: true})))" />
            </td>
            <td width="180" align="center" style="border: solid 1px #FFFFFF; padding: 5px;table-layout:fixed;">
                <input width="70" onchange=@OnSubDistrictNameChanged oninput="(this.dispatchEvent(new CustomEvent('change', {bubbles: true})))" />
            </td>
            <td width="180" align="center" style="border: solid 1px #FFFFFF; padding: 5px;table-layout:fixed;"></td>
            <td width="180" align="center" style="border: solid 1px #FFFFFF; padding: 5px;table-layout:fixed;"></td>
        </tr>
        @foreach (var Districtsobj in districts)
        {
            <tr style="border-style:dashed;border-width:2px;border-color: @(Districtsobj.DistrictId == districtsIDs ? "#ff6a00": "#a2aabe")">
                <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">

                    @if (@Districtsobj.DistrictId == districtsIDs)
                    {
                        <img src="@Imagename" onclick="@(async () => await getSubDistricts(@Districtsobj.DistrictId))" />
                    }
                    else
                    {
                        <img src="Images/toggle.png" onclick="@(async () => await getSubDistricts(@Districtsobj.DistrictId))" />

                    }

                </td>
                <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                    <span style="color:#9F000F">
                        <img src="Images/edit.gif" alt="Edit" width="24px" height="24px" onclick="@(async () => await EditDistricts(@Districtsobj.DistrictId))" />
                    </span>
                </td>
                <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                    <span style="color:#9F000F">
                        <img src="Images/delete.gif" alt="Delete" width="24px" height="24px" onclick="@(async () => await DeleteDistricts(@Districtsobj.DistrictId))" />
                    </span>
                </td>
                <td align="left" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                    <span style="color:#9F000F">
                        @Districtsobj.DistrictId
                    </span>
                </td>
                <td align="left" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                    <span style="color:#9F000F">
                        @Districtsobj.DistrictName
                    </span>
                </td>
                <td align="left" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                    <span style="color:#9F000F">
                        @Districtsobj.StateId
                    </span>
                </td>

            </tr>
            @if (subDistricts != null)
            {
                @if (showDetailStatus == 1)
                {
                    @if (@Districtsobj.DistrictId == districtsIDs)
                    {
                        <tr style="background-color:#6D7B8D ; color:honeydew ;border-style:dashed;border-width:2px;border-color:#ECF3F4;">
                            <td colspan="8" align="center">
                                Sub District of  District - <strong> @Districtsobj.DistrictId </strong> ,Total @subDistricts.Length  details for this District
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <button class="btn btn-info" onclick="@(async () => await AddNewSubDistricts(@Districtsobj.DistrictId))">Add New Detail</button>
                            </td>
                            <td colspan="7">

                                <table style="background-color:#ECF3F4; border: solid 2px #3273d5; padding: 5px;width: 99%;table-layout:fixed;">

                                    <tr style="height: 30px; background-color:#336699 ; color:#FFFFFF ;">
                                        <td width="40" align="center"><b>Edit</b></td>
                                        <td width="40" align="center"><b>Delete</b></td>
                                        <td width="240" align="center">
                                            <b> Districts Number</b>
                                        </td>
                                        <td width="240" align="center">
                                            <b>  SubDistricts Number</b>
                                        </td>
                                        <td width="120" align="center">
                                            <b> SubDistricts Name</b>
                                        </td>

                                    </tr>
                                    @foreach (var subDistrictsObj in subDistricts)
                                    {
                                        <tr>
                                            <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                                                <span style="color:#9F000F">
                                                    <img src="Images/edit.gif" alt="Edit" width="24px" height="24px" onclick="@(async () => await EditSubDistricts(@subDistrictsObj.SubDistrictsId))" />
                                                </span>
                                            </td>
                                            <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                                                <span style="color:#9F000F">
                                                    <img src="Images/delete.gif" alt="Delete" width="24px" height="24px" onclick="@(async () => await DeleteSubDistricts(@subDistrictsObj.SubDistrictsId))" />
                                                </span>
                                            </td>
                                            <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                                                @subDistrictsObj.DistrictId
                                            </td>
                                            <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">

                                                <span style="color:#9F000F">
                                                    @subDistrictsObj.SubDistrictsId
                                                </span>
                                            </td>
                                            <td align="center" style="border: solid 1px #659EC7; padding: 5px;table-layout:fixed;">
                                                <span style="color:#9F000F">
                                                    @subDistrictsObj.SubDistrictsName
                                                </span>
                                            </td>

                                        </tr>
                                    }

                                </table>


                            </td>
                        </tr>
                    }
                }
            }
        }
    </table>
}


@functions {
    Districts[] districts;
    SubDistricts[] subDistricts;


    Districts dstM = new Districts();
    SubDistricts subdstD = new SubDistricts();

    Boolean showAddMaster = false;
    Boolean showAddDetail = false;

    int showDetailStatus = 0;
    int sortStatus = 0;
    int districtsIDs = 0;
    string Imagename = "Images/toggle.png";
    string ImageSortname = "Images/sortAsc.png";

    string Messages = "";

    protected override async Task OnInitAsync()
    {
        districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");
        subdstD = new SubDistricts();
        dstM = new Districts();
        Messages = "";
    }

    //to Add New Districts

    void AddNewDistricts()
    {

        dstM = new Districts();
        showAddMaster = true;
        showAddDetail = false;
        Messages = "";
    }

    //Save New or update Districts

    protected async Task SaveDistricts()
    {
        if (dstM.DistrictId == 0)

        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/Districts/", dstM);

        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Put, "/api/Districts/" + dstM.DistrictId, dstM);
        }
        dstM = new Districts();
        districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");

        Messages = "Districts Save to Database !";
        showAddMaster = false;

    }




    //Edit Districts


    protected async Task EditDistricts(int DistrictsIDs)
    {
        showAddMaster = true;
        dstM = await Http.GetJsonAsync<Districts>("/api/Districts/" + Convert.ToInt32(DistrictsIDs));
    }

    //Delete Districts
    protected async Task DeleteDistricts(int DistrictsIDs)
    {
        // ids = studentID.ToString();
        await Http.DeleteAsync("/api/Districts/" + Convert.ToInt32(DistrictsIDs));


        // await Http.DeleteAsync("/api/StudentMasters/Delete/" + Convert.ToInt32(studentID));

        districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");
        Messages = "Districts Deleted from Database !";
    }

    //Sorting

    protected async Task StudentSorting(string SortColumn)
    {
        districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");
        Messages = "";

        if (sortStatus == 1)
        {
            ImageSortname = "Images/sortDec.png";
            sortStatus = 0;

            switch (SortColumn)
            {
                case "DistrictId":
                    districts = districts.OrderByDescending(x => x.DistrictId).ToArray();
                    break;
                case "DistrictName":
                    districts = districts.OrderByDescending(x => x.DistrictName).ToArray();
                    break;
            }
        }
        else
        {
            ImageSortname = "Images/sortAsc.png";
            sortStatus = 1;

            switch (SortColumn)
            {
                case "DistrictId":
                    districts = districts.OrderByDescending(x => x.DistrictId).ToArray();
                    break;
                case "DistrictName":
                    districts = districts.OrderByDescending(x => x.DistrictName).ToArray();
                    break;

            }
        }
    }



    // For Filtering by DistrictId
    void OnDistrictIdChanged(UIChangeEventArgs args)
    {
        string values = args.Value.ToString();
        studentFilteringList(values, "DistrictId");
    }


    // For Filtering by DistrictName
    void OnDistrictNameChanged(UIChangeEventArgs args)
    {
        string values = args.Value.ToString();
        studentFilteringList(values, "DistrictName");
    }

    // For Filtering by SubDistrictsId
    void OnSubDistrictsIdChanged(UIChangeEventArgs args)
    {
        string values = args.Value.ToString();
        studentFilteringList(values, "SubDistrictsId");
    }

    // For Filtering by StateId
    void OnSubDistrictNameChanged(UIChangeEventArgs args)
    {
        string values = args.Value.ToString();
        studentFilteringList(values, "SubDistrictName");
    }





    //Filtering
    protected async Task studentFilteringList(String Value, string columnName)
    {
        districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");

        Messages = "";
        if (Value.Trim().Length > 0)
        {

            switch (columnName)
            {

                case "DistrictName":
                    districts = districts.Where(x => x.DistrictName.Contains(Value)).ToArray();
                    break;


            }

        }
        else
        {
            districts = await Http.GetJsonAsync<Districts[]>("/api/Districts/");
        }
    }


    //--------------- Detail Grid CRUD



    protected async Task getSubDistricts(int ordID)
    {
        showAddMaster = false;
        showAddDetail = false;
        Messages = "";
        if (districtsIDs != ordID)
        {
            Imagename = "Images/expand.png";
            showDetailStatus = 1;

        }
        else
        {


            if (showDetailStatus == 0)
            {
                Imagename = "Images/expand.png";
                showDetailStatus = 1;
            }
            else
            {
                Imagename = "Images/toggle.png";
                showDetailStatus = 0;
            }

        }
        districtsIDs = ordID;
        subDistricts = await Http.GetJsonAsync<SubDistricts[]>("/api/SubDistricts/" + Convert.ToInt32(ordID));

    }
    //to Add New SubDistricts


    protected async Task AddNewSubDistricts(int districtsID)
    {
        subdstD = new SubDistricts();

        subdstD.DistrictId = districtsID;
        Messages = "";


        showAddDetail = true;
        showAddMaster = false;

    }

    //Save New or update Districts

    protected async Task SaveSubDistricts()
    {
        if (subdstD.SubDistrictsId == 0)

        {
            await Http.SendJsonAsync(HttpMethod.Post, "/api/SubDistricts/", subdstD);

        }
        else
        {
            await Http.SendJsonAsync(HttpMethod.Put, "/api/SubDistricts/" + subdstD.SubDistrictsId, subdstD);
        }

        subDistricts = await Http.GetJsonAsync<SubDistricts[]>("/api/SubDistricts/" + Convert.ToInt32(subdstD.DistrictId));
        subdstD = new SubDistricts();
        showAddDetail = false;
        showAddMaster = false;
        Messages = "SubDistricts Saved to Databse !";
    }




    //Edit Districts


    protected async Task EditSubDistricts(int SubDistrictsIDs)
    {

        subdstD = await Http.GetJsonAsync<SubDistricts>("/api/SubDistricts1/" + Convert.ToInt32(SubDistrictsIDs));
        showAddDetail = true;
        showAddMaster = false;
    }

    //Delete Districts
    protected async Task DeleteSubDistricts(int SubDistrictsIDs)
    {
        var districtsValue = subdstD.DistrictId;
        // ids = studentID.ToString();
        await Http.DeleteAsync("/api/SubDistricts/" + Convert.ToInt32(SubDistrictsIDs));

        // await Http.DeleteAsync("/api/StudentMasters/Delete/" + Convert.ToInt32(studentID));

        subDistricts = await Http.GetJsonAsync<SubDistricts[]>("/api/SubDistricts/" + Convert.ToInt32(districtsValue));
        Imagename = "Images/toggle.png";
        showDetailStatus = 0;
        Messages = "SubDistricts Deleted from Database !";
    }

    void closeMessage()
    {
        Messages = "";
    }
}
